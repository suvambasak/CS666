$date
	Thu Aug 18 22:41:41 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_test $end
$var wire 1 ! overflow $end
$var wire 8 " final_sum [7:0] $end
$var wire 1 # final_carry_out $end
$var reg 8 $ data0 [7:0] $end
$var reg 8 % data1 [7:0] $end
$var reg 1 & mode $end
$scope module uut $end
$var wire 8 ' data0 [7:0] $end
$var wire 8 ( data1 [7:0] $end
$var wire 1 & mode $end
$var wire 1 ! overflow $end
$var wire 8 ) final_sum [7:0] $end
$var wire 1 # final_carry_out $end
$var wire 7 * c [6:0] $end
$var reg 1 + carry_in $end
$scope module add1 $end
$var wire 1 + carry_in $end
$var wire 1 , i0 $end
$var wire 1 - i1 $end
$var wire 1 & mode $end
$var reg 1 . carry_out $end
$var reg 1 / sum $end
$upscope $end
$scope module add2 $end
$var wire 1 0 carry_in $end
$var wire 1 1 i0 $end
$var wire 1 2 i1 $end
$var wire 1 & mode $end
$var reg 1 3 carry_out $end
$var reg 1 4 sum $end
$upscope $end
$scope module add3 $end
$var wire 1 5 carry_in $end
$var wire 1 6 i0 $end
$var wire 1 7 i1 $end
$var wire 1 & mode $end
$var reg 1 8 carry_out $end
$var reg 1 9 sum $end
$upscope $end
$scope module add4 $end
$var wire 1 : carry_in $end
$var wire 1 ; i0 $end
$var wire 1 < i1 $end
$var wire 1 & mode $end
$var reg 1 = carry_out $end
$var reg 1 > sum $end
$upscope $end
$scope module add5 $end
$var wire 1 ? carry_in $end
$var wire 1 @ i0 $end
$var wire 1 A i1 $end
$var wire 1 & mode $end
$var reg 1 B carry_out $end
$var reg 1 C sum $end
$upscope $end
$scope module add6 $end
$var wire 1 D carry_in $end
$var wire 1 E i0 $end
$var wire 1 F i1 $end
$var wire 1 & mode $end
$var reg 1 G carry_out $end
$var reg 1 H sum $end
$upscope $end
$scope module add7 $end
$var wire 1 I carry_in $end
$var wire 1 J i0 $end
$var wire 1 K i1 $end
$var wire 1 & mode $end
$var reg 1 L carry_out $end
$var reg 1 M sum $end
$upscope $end
$scope module add8 $end
$var wire 1 N carry_in $end
$var wire 1 O i0 $end
$var wire 1 P i1 $end
$var wire 1 & mode $end
$var reg 1 # carry_out $end
$var reg 1 Q sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1Q
1P
0O
0N
1M
0L
1K
0J
0I
1H
0G
1F
0E
0D
1C
0B
1A
0@
0?
1>
0=
1<
0;
0:
19
08
17
06
05
14
03
12
01
00
1/
0.
1-
0,
0+
b0 *
b11111111 )
b11111111 (
b0 '
1&
b11111111 %
b0 $
0#
b11111111 "
0!
$end
#5
1#
0Q
0!
1N
1L
0M
1I
1G
0H
1D
1B
0C
1?
1=
0>
1:
18
09
15
13
04
10
b1111111 *
1.
b0 "
b0 )
0/
1,
b1 $
b1 '
#10
00
b0 "
b0 )
04
b1111110 *
0.
0,
11
0-
b10 $
b10 '
b11111110 %
b11111110 (
#15
b1 "
b1 )
1/
1,
b11 $
b11 '
#20
05
b1 "
b1 )
09
b1111100 *
03
0,
01
16
1-
02
b100 $
b100 '
b11111101 %
b11111101 (
#25
14
10
b1111101 *
1.
b10 "
b10 )
0/
1,
b101 $
b101 '
#30
09
05
00
03
b10 "
b10 )
14
b1111100 *
0.
0,
11
0-
b110 $
b110 '
b11111100 %
b11111100 (
#35
10
15
1:
0?
0D
0I
0N
0!
1/
1.
13
14
18
09
0=
1>
0B
0C
0G
0H
b111 *
0L
0M
0#
b1011 "
b1011 )
0Q
1,
1+
b111 $
b111 '
0&
#40
0:
0C
04
08
19
0?
00
05
0=
b1101 "
b1101 )
1>
0.
b0 *
03
0,
01
06
1;
1-
12
07
b1000 $
b1000 '
b11111011 %
b11111011 (
#45
14
10
b1 *
1.
b1110 "
b1110 )
0/
1,
b1001 $
b1001 '
#50
1C
1?
1=
0>
1:
18
09
15
b1111 *
13
b10000 "
b10000 )
04
0,
11
0-
b1010 $
b1010 '
b11111010 %
b11111010 (
#55
b10001 "
b10001 )
1/
1,
b1011 $
b1011 '
#60
05
03
14
00
b10011 "
b10011 )
09
b1100 *
0.
0,
01
16
1-
02
b1100 $
b1100 '
b11111001 %
b11111001 (
#65
19
15
13
04
10
b1111 *
1.
b10100 "
b10100 )
0/
1,
b1101 $
b1101 '
#70
1#
0!
0:
1N
08
1L
05
1I
1G
00
1D
0.
03
14
19
0>
b1111000 *
1B
0C
0H
0M
b110 "
b110 )
0Q
0,
11
0-
0+
b1110 $
b1110 '
b11111000 %
b11111000 (
1&
#75
b111 "
b111 )
1/
1,
b1111 $
b1111 '
