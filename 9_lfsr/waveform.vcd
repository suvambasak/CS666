$date
	Tue Aug 16 14:53:24 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module lfsr_test $end
$var wire 3 ! op [2:0] $end
$var reg 1 " clk $end
$var reg 3 # load_val [2:0] $end
$var reg 1 $ rstn $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 3 % load_val [2:0] $end
$var wire 1 $ rstn $end
$var wire 1 & taps $end
$var wire 3 ' op [2:0] $end
$var reg 3 ( current [2:0] $end
$var reg 1 ) flag $end
$var reg 3 * next [2:0] $end
$scope module d1 $end
$var wire 1 $ clear $end
$var wire 1 " clk $end
$var wire 1 + d $end
$var reg 1 , q $end
$upscope $end
$scope module d2 $end
$var wire 1 $ clear $end
$var wire 1 " clk $end
$var wire 1 - d $end
$var reg 1 . q $end
$upscope $end
$scope module d3 $end
$var wire 1 $ clear $end
$var wire 1 " clk $end
$var wire 1 / d $end
$var reg 1 0 q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x0
x/
x.
x-
x,
x+
bx *
1)
bx (
bx '
x&
b1 %
1$
b1 #
0"
bx !
$end
#1
1&
b100 *
1+
0-
0/
0)
b1 (
1"
#2
0"
#3
00
0.
b1 !
b1 '
1,
0&
b10 *
0+
1/
b100 (
1"
#4
0"
#5
0,
b100 !
b100 '
10
1&
b101 *
1-
0/
b10 (
1"
#6
0"
#7
00
b10 !
b10 '
1.
b110 *
1+
0-
1/
b101 (
1"
#8
0"
#9
1,
0.
b101 !
b101 '
10
b111 *
0+
1-
b110 (
1"
#10
0"
#11
1.
b110 !
b110 '
0,
b11 *
0&
1+
b111 (
1"
#12
0"
#13
b111 !
b111 '
1,
b1 *
0/
b11 (
1"
#14
0"
#15
b11 !
b11 '
00
1&
b100 *
0-
b1 (
1"
#16
0"
#17
b1 !
b1 '
0.
0&
b10 *
0+
1/
b100 (
1"
#18
0"
#19
10
b100 !
b100 '
0,
1&
b101 *
1-
0/
b10 (
1"
#20
0"
#21
1.
b10 !
b10 '
00
b110 *
1+
0-
1/
b101 (
1"
#22
0"
#23
10
0.
b101 !
b101 '
1,
b111 *
0+
1-
b110 (
1"
#24
0"
#25
0,
b110 !
b110 '
1.
b11 *
0&
1+
b111 (
1"
#26
0"
#27
b111 !
b111 '
1,
b1 *
0/
b11 (
1"
#28
0"
#29
b11 !
b11 '
00
1&
b100 *
0-
b1 (
1"
#30
0"
#31
b1 !
b1 '
0.
0&
b10 *
0+
1/
b100 (
1"
#32
0"
#33
0,
b100 !
b100 '
10
1&
b101 *
1-
0/
b10 (
1"
#34
0"
#35
00
b10 !
b10 '
1.
b110 *
1+
0-
1/
b101 (
1"
#36
0"
#37
1,
0.
b101 !
b101 '
10
b111 *
0+
1-
b110 (
1"
#38
0"
#39
1.
b110 !
b110 '
0,
b11 *
0&
1+
b111 (
1"
#40
0"
#41
b111 !
b111 '
1,
b1 *
0/
b11 (
1"
#42
0"
#43
b11 !
b11 '
00
1&
b100 *
0-
b1 (
1"
#44
0"
#45
b1 !
b1 '
0.
0&
b10 *
0+
1/
b100 (
1"
#46
0"
#47
10
b100 !
b100 '
0,
1&
b101 *
1-
0/
b10 (
1"
#48
0"
#49
1.
b10 !
b10 '
00
b110 *
1+
0-
1/
b101 (
1"
#50
0"
#51
10
0.
b101 !
b101 '
1,
b111 *
0+
1-
b110 (
1"
#52
0"
#53
0,
b110 !
b110 '
1.
b11 *
0&
1+
b111 (
1"
#54
0"
#55
b111 !
b111 '
1,
b1 *
0/
b11 (
1"
#56
0"
#57
b11 !
b11 '
00
1&
b100 *
0-
b1 (
1"
#58
0"
#59
b1 !
b1 '
0.
0&
b10 *
0+
1/
b100 (
1"
#60
0"
#61
0,
b100 !
b100 '
10
1&
b101 *
1-
0/
b10 (
1"
#62
0"
#63
00
b10 !
b10 '
1.
b110 *
1+
0-
1/
b101 (
1"
#64
0"
#65
1,
0.
b101 !
b101 '
10
b111 *
0+
1-
b110 (
1"
#66
0"
#67
1.
b110 !
b110 '
0,
b11 *
0&
1+
b111 (
1"
#68
0"
#69
b111 !
b111 '
1,
b1 *
0/
b11 (
1"
#70
0"
#71
b11 !
b11 '
00
1&
b100 *
0-
b1 (
1"
#72
0"
#73
b1 !
b1 '
0.
0&
b10 *
0+
1/
b100 (
1"
#74
0"
#75
10
b100 !
b100 '
0,
1&
b101 *
1-
0/
b10 (
1"
#76
0"
#77
1.
b10 !
b10 '
00
b110 *
1+
0-
1/
b101 (
1"
#78
0"
#79
10
0.
b101 !
b101 '
1,
b111 *
0+
1-
b110 (
1"
#80
0"
#81
0,
b110 !
b110 '
1.
b11 *
0&
1+
b111 (
1"
#82
0"
#83
b111 !
b111 '
1,
b1 *
0/
b11 (
1"
#84
0"
#85
b11 !
b11 '
00
1&
b100 *
0-
b1 (
1"
#86
0"
#87
b1 !
b1 '
0.
0&
b10 *
0+
1/
b100 (
1"
#88
0"
#89
0,
b100 !
b100 '
10
1&
b101 *
1-
0/
b10 (
1"
#90
b0 !
b0 '
00
0&
b0 *
0-
b0 (
0"
0$
#91
1"
#92
0"
#93
1"
#94
0"
#95
1"
#96
0"
#97
1"
#98
0"
#99
1"
#100
0"
