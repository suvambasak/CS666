$date
	Sun Sep  4 02:49:55 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module extended_euclidean_test $end
$var wire 8 ! a_inverse [7:0] $end
$var reg 8 " a [7:0] $end
$var reg 1 # clk $end
$var reg 8 $ prime [7:0] $end
$scope module uut $end
$var wire 8 % a [7:0] $end
$var wire 8 & a_inverse [7:0] $end
$var wire 1 # clk $end
$var wire 8 ' prime [7:0] $end
$var reg 8 ( A [7:0] $end
$var reg 8 ) B [7:0] $end
$var reg 8 * T [7:0] $end
$var reg 8 + T1 [7:0] $end
$var reg 8 , T2 [7:0] $end
$var reg 8 - quotient [7:0] $end
$var reg 8 . remainder [7:0] $end
$var reg 8 / result [7:0] $end
$var reg 3 0 state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
bx -
b1 ,
b0 +
bx *
bx )
bx (
b101 '
bx &
b11 %
b101 $
0#
b11 "
bx !
$end
#1
b11 (
b101 )
b0 0
1#
#2
0#
#3
b10 .
b1 -
b1 0
1#
#4
0#
#5
b11111111 *
b10 0
1#
#6
0#
#7
b11111111 ,
b1 +
b10 (
b11 )
b11 0
1#
#8
0#
#9
b1 .
b1 0
1#
#10
0#
#11
b10 *
b10 0
1#
#12
0#
#13
b10 ,
b11111111 +
b1 (
b10 )
b11 0
1#
#14
0#
#15
b0 .
b10 -
b1 0
1#
#16
0#
#17
b11111011 *
b10 0
1#
#18
0#
#19
b11111011 ,
b10 +
b0 (
b1 )
b11 0
1#
#20
0#
#21
b10 !
b10 &
b10 /
b100 0
1#
#22
0#
#23
1#
#24
0#
#25
1#
#26
0#
#27
1#
#28
0#
#29
1#
#30
0#
